###########################################################################
#                            TextMate Snippets                            #
###########################################################################

snippet rclass "React class"
//$1{{{
class ${1:class_name} extends React.Component {
	$0
}
//}}}
endsnippet

snippet rcr "React render"
//render{{{
render() {
	return (
		$1
	);
}
//}}}
endsnippet

snippet rcinit "React init class"
//constructor{{{
constructor(props) {
	super(props);

	this.state = {
		$1: $2
	};
}
//}}}
endsnippet

snippet rcc "componentWillMount 组件挂载前执行，仅执行一次"
//componentWillMount{{{
componentWillMount() {
	$1
}
//}}}
endsnippet

snippet rcc "componentDidMount 组件挂载完毕执行,仅执行一次"
//componentDidMount{{{
componentDidMount() {
	$1
}
//}}}
endsnippet

snippet rcc "shouldComponentUpdate 返回true或者调用forceUpdate之后，componentWillUpdate会被调用"
//componentWillUpdate{{{
componentWillUpdate(nextProps, nextState) {
	$1
}
//}}}
endsnippet

snippet rcc "componentDidUpdate 组件更新完毕执行"
//componentDidUpdate{{{
componentDidUpdate() {
	$1
}
//}}}
endsnippet

snippet rcc "componentWillUnmount 卸载组件前执行"
//componentWillUnmount{{{
componentWillUnmount() {
	$1
}
//}}}
endsnippet

snippet rcc "componentWillReceiveProps 父组件发生render的时候子组件就会调用，不管props有没有更新，也不管父子组件之间有没有数据交换"
//componentWillReceiveProps{{{
componentWillReceiveProps(nextProps) {
	$1
}
//}}}
endsnippet

snippet rcc "shouldComponentUpdate 组件挂载之后，每次调用setState后都会调用，判断是否需要重新渲染组件。默认返回true，需要重新render"
//shouldComponentUpdate{{{
shouldComponentUpdate(nextProps, nextState) {
	$1
}
//}}}
endsnippet

snippet rcc "forceUpdate 强制更新"
//forceUpdate{{{
forceUpdate() {
	$1
}
//}}}
endsnippet

snippet rcss "React setState" i
this.setState({$1});
endsnippet

snippet rcs "React State" i
this.state.$0
endsnippet

snippet rcp "React Props"
this.props.$0
endsnippet

snippet rcdp "React default props"
${1:class_name}.defaultProps = {
	$1
};$0
endsnippet

snippet rcmap "React map"
this.state.$1.map((x,i) => $2)$0;
endsnippet
